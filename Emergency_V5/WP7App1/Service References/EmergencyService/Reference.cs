//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace WP7App1.EmergencyService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientData", Namespace="http://schemas.datacontract.org/2004/07/EmergencyService")]
    public partial class ClientData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AgeField;
        
        private string EmailField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationData", Namespace="http://schemas.datacontract.org/2004/07/EmergencyService")]
    public partial class NotificationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BackContentField;
        
        private string BackTileUriField;
        
        private string BackTitleField;
        
        private int CountField;
        
        private string DeviceConnectionStatusField;
        
        private string NotificationChannelStatusField;
        
        private string NotificationStatusField;
        
        private string PersonNameField;
        
        private System.Guid PhoneIdField;
        
        private string PushTypeField;
        
        private string TileUriField;
        
        private string TitleField;
        
        private bool UpdateAppTileField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackContent {
            get {
                return this.BackContentField;
            }
            set {
                if ((object.ReferenceEquals(this.BackContentField, value) != true)) {
                    this.BackContentField = value;
                    this.RaisePropertyChanged("BackContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackTileUri {
            get {
                return this.BackTileUriField;
            }
            set {
                if ((object.ReferenceEquals(this.BackTileUriField, value) != true)) {
                    this.BackTileUriField = value;
                    this.RaisePropertyChanged("BackTileUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackTitle {
            get {
                return this.BackTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.BackTitleField, value) != true)) {
                    this.BackTitleField = value;
                    this.RaisePropertyChanged("BackTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceConnectionStatus {
            get {
                return this.DeviceConnectionStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceConnectionStatusField, value) != true)) {
                    this.DeviceConnectionStatusField = value;
                    this.RaisePropertyChanged("DeviceConnectionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationChannelStatus {
            get {
                return this.NotificationChannelStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationChannelStatusField, value) != true)) {
                    this.NotificationChannelStatusField = value;
                    this.RaisePropertyChanged("NotificationChannelStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationStatus {
            get {
                return this.NotificationStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationStatusField, value) != true)) {
                    this.NotificationStatusField = value;
                    this.RaisePropertyChanged("NotificationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonName {
            get {
                return this.PersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonNameField, value) != true)) {
                    this.PersonNameField = value;
                    this.RaisePropertyChanged("PersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PhoneId {
            get {
                return this.PhoneIdField;
            }
            set {
                if ((this.PhoneIdField.Equals(value) != true)) {
                    this.PhoneIdField = value;
                    this.RaisePropertyChanged("PhoneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PushType {
            get {
                return this.PushTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PushTypeField, value) != true)) {
                    this.PushTypeField = value;
                    this.RaisePropertyChanged("PushType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TileUri {
            get {
                return this.TileUriField;
            }
            set {
                if ((object.ReferenceEquals(this.TileUriField, value) != true)) {
                    this.TileUriField = value;
                    this.RaisePropertyChanged("TileUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateAppTile {
            get {
                return this.UpdateAppTileField;
            }
            set {
                if ((this.UpdateAppTileField.Equals(value) != true)) {
                    this.UpdateAppTileField = value;
                    this.RaisePropertyChanged("UpdateAppTile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmergencyService.IMyPushService")]
    public interface IMyPushService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyPushService/ClientRegistration", ReplyAction="http://tempuri.org/IMyPushService/ClientRegistrationResponse")]
        System.IAsyncResult BeginClientRegistration(WP7App1.EmergencyService.ClientData client, string password, System.AsyncCallback callback, object asyncState);
        
        string EndClientRegistration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyPushService/ClientLogin", ReplyAction="http://tempuri.org/IMyPushService/ClientLoginResponse")]
        System.IAsyncResult BeginClientLogin(string username, string password, System.AsyncCallback callback, object asyncState);
        
        WP7App1.EmergencyService.ClientData EndClientLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyPushService/RegisterPhone", ReplyAction="http://tempuri.org/IMyPushService/RegisterPhoneResponse")]
        System.IAsyncResult BeginRegisterPhone(System.Guid phoneId, string channelUri, string username, System.AsyncCallback callback, object asyncState);
        
        void EndRegisterPhone(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyPushService/PushToSubscribedPhones", ReplyAction="http://tempuri.org/IMyPushService/PushToSubscribedPhonesResponse")]
        System.IAsyncResult BeginPushToSubscribedPhones(WP7App1.EmergencyService.NotificationData data, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndPushToSubscribedPhones(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyPushService/SearchFriends", ReplyAction="http://tempuri.org/IMyPushService/SearchFriendsResponse")]
        System.IAsyncResult BeginSearchFriends(WP7App1.EmergencyService.ClientData client, string username, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> EndSearchFriends(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyPushService/SendSosNotifications", ReplyAction="http://tempuri.org/IMyPushService/SendSosNotificationsResponse")]
        System.IAsyncResult BeginSendSosNotifications(WP7App1.EmergencyService.ClientData client, double latitude, double longitude, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndSendSosNotifications(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyPushService/AddFriend", ReplyAction="http://tempuri.org/IMyPushService/AddFriendResponse")]
        System.IAsyncResult BeginAddFriend(string clientUsername, string friendUsername, System.AsyncCallback callback, object asyncState);
        
        string EndAddFriend(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyPushService/CheckFriendshipsStatus", ReplyAction="http://tempuri.org/IMyPushService/CheckFriendshipsStatusResponse")]
        System.IAsyncResult BeginCheckFriendshipsStatus(string clientUsername, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> EndCheckFriendshipsStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyPushService/CompleteFriendshipRequest", ReplyAction="http://tempuri.org/IMyPushService/CompleteFriendshipRequestResponse")]
        System.IAsyncResult BeginCompleteFriendshipRequest(string clientUsername, string friendUsername, bool status, System.AsyncCallback callback, object asyncState);
        
        void EndCompleteFriendshipRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyPushService/DeleteFriend", ReplyAction="http://tempuri.org/IMyPushService/DeleteFriendResponse")]
        System.IAsyncResult BeginDeleteFriend(string clientUsername, string friendUsername, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteFriend(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyPushService/GetFriendsList", ReplyAction="http://tempuri.org/IMyPushService/GetFriendsListResponse")]
        System.IAsyncResult BeginGetFriendsList(string username, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> EndGetFriendsList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyPushServiceChannel : WP7App1.EmergencyService.IMyPushService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClientRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClientLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WP7App1.EmergencyService.ClientData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WP7App1.EmergencyService.ClientData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PushToSubscribedPhonesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PushToSubscribedPhonesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchFriendsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchFriendsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WP7App1.EmergencyService.ClientData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendSosNotificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendSosNotificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddFriendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddFriendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckFriendshipsStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckFriendshipsStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WP7App1.EmergencyService.ClientData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteFriendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteFriendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFriendsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFriendsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<WP7App1.EmergencyService.ClientData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyPushServiceClient : System.ServiceModel.ClientBase<WP7App1.EmergencyService.IMyPushService>, WP7App1.EmergencyService.IMyPushService {
        
        private BeginOperationDelegate onBeginClientRegistrationDelegate;
        
        private EndOperationDelegate onEndClientRegistrationDelegate;
        
        private System.Threading.SendOrPostCallback onClientRegistrationCompletedDelegate;
        
        private BeginOperationDelegate onBeginClientLoginDelegate;
        
        private EndOperationDelegate onEndClientLoginDelegate;
        
        private System.Threading.SendOrPostCallback onClientLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterPhoneDelegate;
        
        private EndOperationDelegate onEndRegisterPhoneDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterPhoneCompletedDelegate;
        
        private BeginOperationDelegate onBeginPushToSubscribedPhonesDelegate;
        
        private EndOperationDelegate onEndPushToSubscribedPhonesDelegate;
        
        private System.Threading.SendOrPostCallback onPushToSubscribedPhonesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchFriendsDelegate;
        
        private EndOperationDelegate onEndSearchFriendsDelegate;
        
        private System.Threading.SendOrPostCallback onSearchFriendsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendSosNotificationsDelegate;
        
        private EndOperationDelegate onEndSendSosNotificationsDelegate;
        
        private System.Threading.SendOrPostCallback onSendSosNotificationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddFriendDelegate;
        
        private EndOperationDelegate onEndAddFriendDelegate;
        
        private System.Threading.SendOrPostCallback onAddFriendCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckFriendshipsStatusDelegate;
        
        private EndOperationDelegate onEndCheckFriendshipsStatusDelegate;
        
        private System.Threading.SendOrPostCallback onCheckFriendshipsStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginCompleteFriendshipRequestDelegate;
        
        private EndOperationDelegate onEndCompleteFriendshipRequestDelegate;
        
        private System.Threading.SendOrPostCallback onCompleteFriendshipRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFriendDelegate;
        
        private EndOperationDelegate onEndDeleteFriendDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFriendCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFriendsListDelegate;
        
        private EndOperationDelegate onEndGetFriendsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetFriendsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MyPushServiceClient() {
        }
        
        public MyPushServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyPushServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyPushServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyPushServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ClientRegistrationCompletedEventArgs> ClientRegistrationCompleted;
        
        public event System.EventHandler<ClientLoginCompletedEventArgs> ClientLoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RegisterPhoneCompleted;
        
        public event System.EventHandler<PushToSubscribedPhonesCompletedEventArgs> PushToSubscribedPhonesCompleted;
        
        public event System.EventHandler<SearchFriendsCompletedEventArgs> SearchFriendsCompleted;
        
        public event System.EventHandler<SendSosNotificationsCompletedEventArgs> SendSosNotificationsCompleted;
        
        public event System.EventHandler<AddFriendCompletedEventArgs> AddFriendCompleted;
        
        public event System.EventHandler<CheckFriendshipsStatusCompletedEventArgs> CheckFriendshipsStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CompleteFriendshipRequestCompleted;
        
        public event System.EventHandler<DeleteFriendCompletedEventArgs> DeleteFriendCompleted;
        
        public event System.EventHandler<GetFriendsListCompletedEventArgs> GetFriendsListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7App1.EmergencyService.IMyPushService.BeginClientRegistration(WP7App1.EmergencyService.ClientData client, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClientRegistration(client, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WP7App1.EmergencyService.IMyPushService.EndClientRegistration(System.IAsyncResult result) {
            return base.Channel.EndClientRegistration(result);
        }
        
        private System.IAsyncResult OnBeginClientRegistration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WP7App1.EmergencyService.ClientData client = ((WP7App1.EmergencyService.ClientData)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((WP7App1.EmergencyService.IMyPushService)(this)).BeginClientRegistration(client, password, callback, asyncState);
        }
        
        private object[] OnEndClientRegistration(System.IAsyncResult result) {
            string retVal = ((WP7App1.EmergencyService.IMyPushService)(this)).EndClientRegistration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClientRegistrationCompleted(object state) {
            if ((this.ClientRegistrationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClientRegistrationCompleted(this, new ClientRegistrationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClientRegistrationAsync(WP7App1.EmergencyService.ClientData client, string password) {
            this.ClientRegistrationAsync(client, password, null);
        }
        
        public void ClientRegistrationAsync(WP7App1.EmergencyService.ClientData client, string password, object userState) {
            if ((this.onBeginClientRegistrationDelegate == null)) {
                this.onBeginClientRegistrationDelegate = new BeginOperationDelegate(this.OnBeginClientRegistration);
            }
            if ((this.onEndClientRegistrationDelegate == null)) {
                this.onEndClientRegistrationDelegate = new EndOperationDelegate(this.OnEndClientRegistration);
            }
            if ((this.onClientRegistrationCompletedDelegate == null)) {
                this.onClientRegistrationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClientRegistrationCompleted);
            }
            base.InvokeAsync(this.onBeginClientRegistrationDelegate, new object[] {
                        client,
                        password}, this.onEndClientRegistrationDelegate, this.onClientRegistrationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7App1.EmergencyService.IMyPushService.BeginClientLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClientLogin(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WP7App1.EmergencyService.ClientData WP7App1.EmergencyService.IMyPushService.EndClientLogin(System.IAsyncResult result) {
            return base.Channel.EndClientLogin(result);
        }
        
        private System.IAsyncResult OnBeginClientLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((WP7App1.EmergencyService.IMyPushService)(this)).BeginClientLogin(username, password, callback, asyncState);
        }
        
        private object[] OnEndClientLogin(System.IAsyncResult result) {
            WP7App1.EmergencyService.ClientData retVal = ((WP7App1.EmergencyService.IMyPushService)(this)).EndClientLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClientLoginCompleted(object state) {
            if ((this.ClientLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClientLoginCompleted(this, new ClientLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClientLoginAsync(string username, string password) {
            this.ClientLoginAsync(username, password, null);
        }
        
        public void ClientLoginAsync(string username, string password, object userState) {
            if ((this.onBeginClientLoginDelegate == null)) {
                this.onBeginClientLoginDelegate = new BeginOperationDelegate(this.OnBeginClientLogin);
            }
            if ((this.onEndClientLoginDelegate == null)) {
                this.onEndClientLoginDelegate = new EndOperationDelegate(this.OnEndClientLogin);
            }
            if ((this.onClientLoginCompletedDelegate == null)) {
                this.onClientLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClientLoginCompleted);
            }
            base.InvokeAsync(this.onBeginClientLoginDelegate, new object[] {
                        username,
                        password}, this.onEndClientLoginDelegate, this.onClientLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7App1.EmergencyService.IMyPushService.BeginRegisterPhone(System.Guid phoneId, string channelUri, string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterPhone(phoneId, channelUri, username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WP7App1.EmergencyService.IMyPushService.EndRegisterPhone(System.IAsyncResult result) {
            base.Channel.EndRegisterPhone(result);
        }
        
        private System.IAsyncResult OnBeginRegisterPhone(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid phoneId = ((System.Guid)(inValues[0]));
            string channelUri = ((string)(inValues[1]));
            string username = ((string)(inValues[2]));
            return ((WP7App1.EmergencyService.IMyPushService)(this)).BeginRegisterPhone(phoneId, channelUri, username, callback, asyncState);
        }
        
        private object[] OnEndRegisterPhone(System.IAsyncResult result) {
            ((WP7App1.EmergencyService.IMyPushService)(this)).EndRegisterPhone(result);
            return null;
        }
        
        private void OnRegisterPhoneCompleted(object state) {
            if ((this.RegisterPhoneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterPhoneCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterPhoneAsync(System.Guid phoneId, string channelUri, string username) {
            this.RegisterPhoneAsync(phoneId, channelUri, username, null);
        }
        
        public void RegisterPhoneAsync(System.Guid phoneId, string channelUri, string username, object userState) {
            if ((this.onBeginRegisterPhoneDelegate == null)) {
                this.onBeginRegisterPhoneDelegate = new BeginOperationDelegate(this.OnBeginRegisterPhone);
            }
            if ((this.onEndRegisterPhoneDelegate == null)) {
                this.onEndRegisterPhoneDelegate = new EndOperationDelegate(this.OnEndRegisterPhone);
            }
            if ((this.onRegisterPhoneCompletedDelegate == null)) {
                this.onRegisterPhoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterPhoneCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterPhoneDelegate, new object[] {
                        phoneId,
                        channelUri,
                        username}, this.onEndRegisterPhoneDelegate, this.onRegisterPhoneCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7App1.EmergencyService.IMyPushService.BeginPushToSubscribedPhones(WP7App1.EmergencyService.NotificationData data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPushToSubscribedPhones(data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> WP7App1.EmergencyService.IMyPushService.EndPushToSubscribedPhones(System.IAsyncResult result) {
            return base.Channel.EndPushToSubscribedPhones(result);
        }
        
        private System.IAsyncResult OnBeginPushToSubscribedPhones(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WP7App1.EmergencyService.NotificationData data = ((WP7App1.EmergencyService.NotificationData)(inValues[0]));
            return ((WP7App1.EmergencyService.IMyPushService)(this)).BeginPushToSubscribedPhones(data, callback, asyncState);
        }
        
        private object[] OnEndPushToSubscribedPhones(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((WP7App1.EmergencyService.IMyPushService)(this)).EndPushToSubscribedPhones(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPushToSubscribedPhonesCompleted(object state) {
            if ((this.PushToSubscribedPhonesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PushToSubscribedPhonesCompleted(this, new PushToSubscribedPhonesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PushToSubscribedPhonesAsync(WP7App1.EmergencyService.NotificationData data) {
            this.PushToSubscribedPhonesAsync(data, null);
        }
        
        public void PushToSubscribedPhonesAsync(WP7App1.EmergencyService.NotificationData data, object userState) {
            if ((this.onBeginPushToSubscribedPhonesDelegate == null)) {
                this.onBeginPushToSubscribedPhonesDelegate = new BeginOperationDelegate(this.OnBeginPushToSubscribedPhones);
            }
            if ((this.onEndPushToSubscribedPhonesDelegate == null)) {
                this.onEndPushToSubscribedPhonesDelegate = new EndOperationDelegate(this.OnEndPushToSubscribedPhones);
            }
            if ((this.onPushToSubscribedPhonesCompletedDelegate == null)) {
                this.onPushToSubscribedPhonesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPushToSubscribedPhonesCompleted);
            }
            base.InvokeAsync(this.onBeginPushToSubscribedPhonesDelegate, new object[] {
                        data}, this.onEndPushToSubscribedPhonesDelegate, this.onPushToSubscribedPhonesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7App1.EmergencyService.IMyPushService.BeginSearchFriends(WP7App1.EmergencyService.ClientData client, string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchFriends(client, username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> WP7App1.EmergencyService.IMyPushService.EndSearchFriends(System.IAsyncResult result) {
            return base.Channel.EndSearchFriends(result);
        }
        
        private System.IAsyncResult OnBeginSearchFriends(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WP7App1.EmergencyService.ClientData client = ((WP7App1.EmergencyService.ClientData)(inValues[0]));
            string username = ((string)(inValues[1]));
            return ((WP7App1.EmergencyService.IMyPushService)(this)).BeginSearchFriends(client, username, callback, asyncState);
        }
        
        private object[] OnEndSearchFriends(System.IAsyncResult result) {
            System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> retVal = ((WP7App1.EmergencyService.IMyPushService)(this)).EndSearchFriends(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchFriendsCompleted(object state) {
            if ((this.SearchFriendsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchFriendsCompleted(this, new SearchFriendsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchFriendsAsync(WP7App1.EmergencyService.ClientData client, string username) {
            this.SearchFriendsAsync(client, username, null);
        }
        
        public void SearchFriendsAsync(WP7App1.EmergencyService.ClientData client, string username, object userState) {
            if ((this.onBeginSearchFriendsDelegate == null)) {
                this.onBeginSearchFriendsDelegate = new BeginOperationDelegate(this.OnBeginSearchFriends);
            }
            if ((this.onEndSearchFriendsDelegate == null)) {
                this.onEndSearchFriendsDelegate = new EndOperationDelegate(this.OnEndSearchFriends);
            }
            if ((this.onSearchFriendsCompletedDelegate == null)) {
                this.onSearchFriendsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchFriendsCompleted);
            }
            base.InvokeAsync(this.onBeginSearchFriendsDelegate, new object[] {
                        client,
                        username}, this.onEndSearchFriendsDelegate, this.onSearchFriendsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7App1.EmergencyService.IMyPushService.BeginSendSosNotifications(WP7App1.EmergencyService.ClientData client, double latitude, double longitude, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendSosNotifications(client, latitude, longitude, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> WP7App1.EmergencyService.IMyPushService.EndSendSosNotifications(System.IAsyncResult result) {
            return base.Channel.EndSendSosNotifications(result);
        }
        
        private System.IAsyncResult OnBeginSendSosNotifications(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WP7App1.EmergencyService.ClientData client = ((WP7App1.EmergencyService.ClientData)(inValues[0]));
            double latitude = ((double)(inValues[1]));
            double longitude = ((double)(inValues[2]));
            return ((WP7App1.EmergencyService.IMyPushService)(this)).BeginSendSosNotifications(client, latitude, longitude, callback, asyncState);
        }
        
        private object[] OnEndSendSosNotifications(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((WP7App1.EmergencyService.IMyPushService)(this)).EndSendSosNotifications(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendSosNotificationsCompleted(object state) {
            if ((this.SendSosNotificationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendSosNotificationsCompleted(this, new SendSosNotificationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendSosNotificationsAsync(WP7App1.EmergencyService.ClientData client, double latitude, double longitude) {
            this.SendSosNotificationsAsync(client, latitude, longitude, null);
        }
        
        public void SendSosNotificationsAsync(WP7App1.EmergencyService.ClientData client, double latitude, double longitude, object userState) {
            if ((this.onBeginSendSosNotificationsDelegate == null)) {
                this.onBeginSendSosNotificationsDelegate = new BeginOperationDelegate(this.OnBeginSendSosNotifications);
            }
            if ((this.onEndSendSosNotificationsDelegate == null)) {
                this.onEndSendSosNotificationsDelegate = new EndOperationDelegate(this.OnEndSendSosNotifications);
            }
            if ((this.onSendSosNotificationsCompletedDelegate == null)) {
                this.onSendSosNotificationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendSosNotificationsCompleted);
            }
            base.InvokeAsync(this.onBeginSendSosNotificationsDelegate, new object[] {
                        client,
                        latitude,
                        longitude}, this.onEndSendSosNotificationsDelegate, this.onSendSosNotificationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7App1.EmergencyService.IMyPushService.BeginAddFriend(string clientUsername, string friendUsername, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddFriend(clientUsername, friendUsername, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WP7App1.EmergencyService.IMyPushService.EndAddFriend(System.IAsyncResult result) {
            return base.Channel.EndAddFriend(result);
        }
        
        private System.IAsyncResult OnBeginAddFriend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientUsername = ((string)(inValues[0]));
            string friendUsername = ((string)(inValues[1]));
            return ((WP7App1.EmergencyService.IMyPushService)(this)).BeginAddFriend(clientUsername, friendUsername, callback, asyncState);
        }
        
        private object[] OnEndAddFriend(System.IAsyncResult result) {
            string retVal = ((WP7App1.EmergencyService.IMyPushService)(this)).EndAddFriend(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddFriendCompleted(object state) {
            if ((this.AddFriendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddFriendCompleted(this, new AddFriendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddFriendAsync(string clientUsername, string friendUsername) {
            this.AddFriendAsync(clientUsername, friendUsername, null);
        }
        
        public void AddFriendAsync(string clientUsername, string friendUsername, object userState) {
            if ((this.onBeginAddFriendDelegate == null)) {
                this.onBeginAddFriendDelegate = new BeginOperationDelegate(this.OnBeginAddFriend);
            }
            if ((this.onEndAddFriendDelegate == null)) {
                this.onEndAddFriendDelegate = new EndOperationDelegate(this.OnEndAddFriend);
            }
            if ((this.onAddFriendCompletedDelegate == null)) {
                this.onAddFriendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddFriendCompleted);
            }
            base.InvokeAsync(this.onBeginAddFriendDelegate, new object[] {
                        clientUsername,
                        friendUsername}, this.onEndAddFriendDelegate, this.onAddFriendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7App1.EmergencyService.IMyPushService.BeginCheckFriendshipsStatus(string clientUsername, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckFriendshipsStatus(clientUsername, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> WP7App1.EmergencyService.IMyPushService.EndCheckFriendshipsStatus(System.IAsyncResult result) {
            return base.Channel.EndCheckFriendshipsStatus(result);
        }
        
        private System.IAsyncResult OnBeginCheckFriendshipsStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientUsername = ((string)(inValues[0]));
            return ((WP7App1.EmergencyService.IMyPushService)(this)).BeginCheckFriendshipsStatus(clientUsername, callback, asyncState);
        }
        
        private object[] OnEndCheckFriendshipsStatus(System.IAsyncResult result) {
            System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> retVal = ((WP7App1.EmergencyService.IMyPushService)(this)).EndCheckFriendshipsStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckFriendshipsStatusCompleted(object state) {
            if ((this.CheckFriendshipsStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckFriendshipsStatusCompleted(this, new CheckFriendshipsStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckFriendshipsStatusAsync(string clientUsername) {
            this.CheckFriendshipsStatusAsync(clientUsername, null);
        }
        
        public void CheckFriendshipsStatusAsync(string clientUsername, object userState) {
            if ((this.onBeginCheckFriendshipsStatusDelegate == null)) {
                this.onBeginCheckFriendshipsStatusDelegate = new BeginOperationDelegate(this.OnBeginCheckFriendshipsStatus);
            }
            if ((this.onEndCheckFriendshipsStatusDelegate == null)) {
                this.onEndCheckFriendshipsStatusDelegate = new EndOperationDelegate(this.OnEndCheckFriendshipsStatus);
            }
            if ((this.onCheckFriendshipsStatusCompletedDelegate == null)) {
                this.onCheckFriendshipsStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckFriendshipsStatusCompleted);
            }
            base.InvokeAsync(this.onBeginCheckFriendshipsStatusDelegate, new object[] {
                        clientUsername}, this.onEndCheckFriendshipsStatusDelegate, this.onCheckFriendshipsStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7App1.EmergencyService.IMyPushService.BeginCompleteFriendshipRequest(string clientUsername, string friendUsername, bool status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCompleteFriendshipRequest(clientUsername, friendUsername, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WP7App1.EmergencyService.IMyPushService.EndCompleteFriendshipRequest(System.IAsyncResult result) {
            base.Channel.EndCompleteFriendshipRequest(result);
        }
        
        private System.IAsyncResult OnBeginCompleteFriendshipRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientUsername = ((string)(inValues[0]));
            string friendUsername = ((string)(inValues[1]));
            bool status = ((bool)(inValues[2]));
            return ((WP7App1.EmergencyService.IMyPushService)(this)).BeginCompleteFriendshipRequest(clientUsername, friendUsername, status, callback, asyncState);
        }
        
        private object[] OnEndCompleteFriendshipRequest(System.IAsyncResult result) {
            ((WP7App1.EmergencyService.IMyPushService)(this)).EndCompleteFriendshipRequest(result);
            return null;
        }
        
        private void OnCompleteFriendshipRequestCompleted(object state) {
            if ((this.CompleteFriendshipRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CompleteFriendshipRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CompleteFriendshipRequestAsync(string clientUsername, string friendUsername, bool status) {
            this.CompleteFriendshipRequestAsync(clientUsername, friendUsername, status, null);
        }
        
        public void CompleteFriendshipRequestAsync(string clientUsername, string friendUsername, bool status, object userState) {
            if ((this.onBeginCompleteFriendshipRequestDelegate == null)) {
                this.onBeginCompleteFriendshipRequestDelegate = new BeginOperationDelegate(this.OnBeginCompleteFriendshipRequest);
            }
            if ((this.onEndCompleteFriendshipRequestDelegate == null)) {
                this.onEndCompleteFriendshipRequestDelegate = new EndOperationDelegate(this.OnEndCompleteFriendshipRequest);
            }
            if ((this.onCompleteFriendshipRequestCompletedDelegate == null)) {
                this.onCompleteFriendshipRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCompleteFriendshipRequestCompleted);
            }
            base.InvokeAsync(this.onBeginCompleteFriendshipRequestDelegate, new object[] {
                        clientUsername,
                        friendUsername,
                        status}, this.onEndCompleteFriendshipRequestDelegate, this.onCompleteFriendshipRequestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7App1.EmergencyService.IMyPushService.BeginDeleteFriend(string clientUsername, string friendUsername, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFriend(clientUsername, friendUsername, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WP7App1.EmergencyService.IMyPushService.EndDeleteFriend(System.IAsyncResult result) {
            return base.Channel.EndDeleteFriend(result);
        }
        
        private System.IAsyncResult OnBeginDeleteFriend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientUsername = ((string)(inValues[0]));
            string friendUsername = ((string)(inValues[1]));
            return ((WP7App1.EmergencyService.IMyPushService)(this)).BeginDeleteFriend(clientUsername, friendUsername, callback, asyncState);
        }
        
        private object[] OnEndDeleteFriend(System.IAsyncResult result) {
            string retVal = ((WP7App1.EmergencyService.IMyPushService)(this)).EndDeleteFriend(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteFriendCompleted(object state) {
            if ((this.DeleteFriendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFriendCompleted(this, new DeleteFriendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFriendAsync(string clientUsername, string friendUsername) {
            this.DeleteFriendAsync(clientUsername, friendUsername, null);
        }
        
        public void DeleteFriendAsync(string clientUsername, string friendUsername, object userState) {
            if ((this.onBeginDeleteFriendDelegate == null)) {
                this.onBeginDeleteFriendDelegate = new BeginOperationDelegate(this.OnBeginDeleteFriend);
            }
            if ((this.onEndDeleteFriendDelegate == null)) {
                this.onEndDeleteFriendDelegate = new EndOperationDelegate(this.OnEndDeleteFriend);
            }
            if ((this.onDeleteFriendCompletedDelegate == null)) {
                this.onDeleteFriendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFriendCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFriendDelegate, new object[] {
                        clientUsername,
                        friendUsername}, this.onEndDeleteFriendDelegate, this.onDeleteFriendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WP7App1.EmergencyService.IMyPushService.BeginGetFriendsList(string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFriendsList(username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> WP7App1.EmergencyService.IMyPushService.EndGetFriendsList(System.IAsyncResult result) {
            return base.Channel.EndGetFriendsList(result);
        }
        
        private System.IAsyncResult OnBeginGetFriendsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            return ((WP7App1.EmergencyService.IMyPushService)(this)).BeginGetFriendsList(username, callback, asyncState);
        }
        
        private object[] OnEndGetFriendsList(System.IAsyncResult result) {
            System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> retVal = ((WP7App1.EmergencyService.IMyPushService)(this)).EndGetFriendsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFriendsListCompleted(object state) {
            if ((this.GetFriendsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFriendsListCompleted(this, new GetFriendsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFriendsListAsync(string username) {
            this.GetFriendsListAsync(username, null);
        }
        
        public void GetFriendsListAsync(string username, object userState) {
            if ((this.onBeginGetFriendsListDelegate == null)) {
                this.onBeginGetFriendsListDelegate = new BeginOperationDelegate(this.OnBeginGetFriendsList);
            }
            if ((this.onEndGetFriendsListDelegate == null)) {
                this.onEndGetFriendsListDelegate = new EndOperationDelegate(this.OnEndGetFriendsList);
            }
            if ((this.onGetFriendsListCompletedDelegate == null)) {
                this.onGetFriendsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFriendsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetFriendsListDelegate, new object[] {
                        username}, this.onEndGetFriendsListDelegate, this.onGetFriendsListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WP7App1.EmergencyService.IMyPushService CreateChannel() {
            return new MyPushServiceClientChannel(this);
        }
        
        private class MyPushServiceClientChannel : ChannelBase<WP7App1.EmergencyService.IMyPushService>, WP7App1.EmergencyService.IMyPushService {
            
            public MyPushServiceClientChannel(System.ServiceModel.ClientBase<WP7App1.EmergencyService.IMyPushService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginClientRegistration(WP7App1.EmergencyService.ClientData client, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = client;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("ClientRegistration", _args, callback, asyncState);
                return _result;
            }
            
            public string EndClientRegistration(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ClientRegistration", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginClientLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("ClientLogin", _args, callback, asyncState);
                return _result;
            }
            
            public WP7App1.EmergencyService.ClientData EndClientLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                WP7App1.EmergencyService.ClientData _result = ((WP7App1.EmergencyService.ClientData)(base.EndInvoke("ClientLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegisterPhone(System.Guid phoneId, string channelUri, string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = phoneId;
                _args[1] = channelUri;
                _args[2] = username;
                System.IAsyncResult _result = base.BeginInvoke("RegisterPhone", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRegisterPhone(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RegisterPhone", _args, result);
            }
            
            public System.IAsyncResult BeginPushToSubscribedPhones(WP7App1.EmergencyService.NotificationData data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = data;
                System.IAsyncResult _result = base.BeginInvoke("PushToSubscribedPhones", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndPushToSubscribedPhones(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("PushToSubscribedPhones", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchFriends(WP7App1.EmergencyService.ClientData client, string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = client;
                _args[1] = username;
                System.IAsyncResult _result = base.BeginInvoke("SearchFriends", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> EndSearchFriends(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> _result = ((System.Collections.Generic.List<WP7App1.EmergencyService.ClientData>)(base.EndInvoke("SearchFriends", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendSosNotifications(WP7App1.EmergencyService.ClientData client, double latitude, double longitude, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = client;
                _args[1] = latitude;
                _args[2] = longitude;
                System.IAsyncResult _result = base.BeginInvoke("SendSosNotifications", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndSendSosNotifications(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("SendSosNotifications", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddFriend(string clientUsername, string friendUsername, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientUsername;
                _args[1] = friendUsername;
                System.IAsyncResult _result = base.BeginInvoke("AddFriend", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAddFriend(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("AddFriend", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckFriendshipsStatus(string clientUsername, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = clientUsername;
                System.IAsyncResult _result = base.BeginInvoke("CheckFriendshipsStatus", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> EndCheckFriendshipsStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> _result = ((System.Collections.Generic.List<WP7App1.EmergencyService.ClientData>)(base.EndInvoke("CheckFriendshipsStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCompleteFriendshipRequest(string clientUsername, string friendUsername, bool status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = clientUsername;
                _args[1] = friendUsername;
                _args[2] = status;
                System.IAsyncResult _result = base.BeginInvoke("CompleteFriendshipRequest", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCompleteFriendshipRequest(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CompleteFriendshipRequest", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteFriend(string clientUsername, string friendUsername, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientUsername;
                _args[1] = friendUsername;
                System.IAsyncResult _result = base.BeginInvoke("DeleteFriend", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDeleteFriend(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DeleteFriend", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFriendsList(string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = username;
                System.IAsyncResult _result = base.BeginInvoke("GetFriendsList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> EndGetFriendsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<WP7App1.EmergencyService.ClientData> _result = ((System.Collections.Generic.List<WP7App1.EmergencyService.ClientData>)(base.EndInvoke("GetFriendsList", _args, result)));
                return _result;
            }
        }
    }
}
